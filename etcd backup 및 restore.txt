★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★
ETCD
ETCD -> Snapshot 저장했던곳으로 backup -> backup 된 곳에서 다른 클러스터쪽으로 restore 하여 원래 상태로 다시 복구

• Coreos 가 만든 분산 key:value 형태의 데이터 스토리지
• 쿠버네티스 클러스터의 정보를 저장(memory) 해서 사용
• 모든 etcd 데이터는 etcd 데이터베이스 파일에 보관 : /var/lib/etcd
• etcd 관리 명령 : etcdctl
• etcdctl 설치 확인
=> ETCD 를 호스팅 할 시스템에 ssh 로그인
=> $ ssh k8s-master
동작중인 etcd 버전과 etcdctl 툴이 설치 여부확인
=> $ etcd --version
=> $ etcdctl version


ETCD backup
• master 의 장애와 같은 예기치 못한 사고로 인해 ETCD 데이터베이스가 유실될 경우를 대비해서 Backup API를 제공
• ETCD snapshot

ETCD Restore
• Snapshot 으로 저장한 database 파일을 동작중인 etcd 에 적용하여 snapshot 생성시점으로 되돌리기
• 단계
(1) snapshot 파일을 데이터베이스 파일로 복원
(2) 동작중인 etcd Pod 의 구성 정보를 복원된 데이터베이스 위치로 수정 적용

Ex.)
# etcd Back-up
sudo ETCDCTL_API=3 etcdctl \ 
  --endpoints=https://127.0.0.1:2379 \
  --cacert=/etc/kubernetes/pki/etcd/ca.crt \
  --cert=/etc/kubernetes/pki/etcd/server.crt \
  --key=/etc/kubernetes/pki/etcd/server.key \
  snapshot save /data/etcd-snapshot.db

ETCDCTL_API=3 -> version

ps -ef | grep kube | grep <cacert, cert, key-file>
-> 정확하게 일치하는 file 찾아서 써야함

ls -l /tmp/ -> 백업파일이 잘 생성 되었는지 확인

kubectl get pods
kubectl get deployments.apps


# etcd Restore
# new database dir : /var/lib/etcd-new
restore 시 기존의 db의 디렉토리에서 하는게 아니고 새로운 db의 디렉토리에 restore
sudo ETCDCTL_API=3 etcdctl \
  --data-dir /var/lib/etcd-previous \ -> 새로 사용할 etcd 디렉토리
  snapshot restore /data/etcd-snapshot-previous.db -> 기존에 있던 스냅샷 파일로 복원

sudo ls /var/lib/etcd-previous
sudo tree /var/lib/etcd-previous

* etcd pod의 data 저장소를 /var/lib/etcd-new 로 변경해서 다시 실행
sudo vi /etc/kubernetes/manifests/etcd.yaml
…
-hostPath:
path: /var/lib/etcd -> /var/lib/etcd-previous 로 경로 변경하여 restore 되도록 설정
type: DirectoryOrC

docker 명령으로 etcd가 restart 되었는지 확인
sudo docker ps -a | grep etcd

복원되었는지 확인
kubectl get pods

